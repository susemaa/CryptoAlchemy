/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Bid: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number },
        {
          metadata: {
            name: "Bid",
            types: ["u8","contractaddress","u8","u8","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    Health: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, value: RecsType.Number },
        {
          metadata: {
            name: "Health",
            types: ["contractaddress","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    Inventory: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, item0_count: RecsType.Number, item1_count: RecsType.Number, item2_count: RecsType.Number, item3_count: RecsType.Number, trash: RecsType.Number },
        {
          metadata: {
            name: "Inventory",
            types: ["contractaddress","u8","u8","u8","u8","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    Moves: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, remaining: RecsType.Number, last_direction: RecsType.Number },
        {
          metadata: {
            name: "Moves",
            types: ["contractaddress","u8","enum"],
            customTypes: ["Direction"],
          },
        }
      );
    })(),
    Position: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number } },
        {
          metadata: {
            name: "Position",
            types: ["contractaddress","u32","u32"],
            customTypes: ["Vec2"],
          },
        }
      );
    })(),
    Random: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, value: RecsType.BigInt },
        {
          metadata: {
            name: "Random",
            types: ["contractaddress","u256"],
            customTypes: [],
          },
        }
      );
    })(),
    Shop: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, slot1: { player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number }, slot2: { player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number }, slot3: { player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number }, slot4: { player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number }, slot5: { player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number }, slot6: { player: RecsType.BigInt, item: RecsType.Number, count: RecsType.Number, price: RecsType.Number } },
        {
          metadata: {
            name: "Shop",
            types: ["contractaddress","contractaddress","u8","u8","u8","contractaddress","u8","u8","u8","contractaddress","u8","u8","u8","contractaddress","u8","u8","u8","contractaddress","u8","u8","u8","contractaddress","u8","u8","u8"],
            customTypes: ["BidShop","BidShop","BidShop","BidShop","BidShop","BidShop"],
          },
        }
      );
    })(),
    State: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, health: RecsType.Number, points: RecsType.Number, money: RecsType.Number, shop_slot: RecsType.Number, timestamp: RecsType.BigInt },
        {
          metadata: {
            name: "State",
            types: ["contractaddress","u8","u8","u8","u8","u64"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
